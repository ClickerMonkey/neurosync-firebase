/* rekord-firebase 1.5.0 - A rekord binding to firebase - implementing Rekord.rest & Rekord.live by Philip Diffenderfer */
!function(e,t){"function"==typeof define&&define.amd?define(["rekord","firebase"],function(i,a){return t(e,i,a)}):"object"==typeof module&&module.exports?module.exports=t(global,require("rekord"),require("firebase")):e.Rekord=t(e,e.Rekord,e.Firebase||e.firebase)}(this,function(e,t,i,a){function n(e){return v(e.key)?e.key():e.key}function r(e){return function(){e({})}}function s(e){return function(t){e({},t.code)}}function o(e){return function(t){var i=t.val(),a=[];for(var n in i){var r=i[n];b(r)&&a.push(r)}e(a)}}function c(e){return function(t){e([],t.code)}}function u(e){for(var t in e)e[t]===a&&delete e[t]}function h(e){this.database=e,this.original=m.call(t,e)}function l(e){this.database=e,this.firebase=e.getLiveFirebase?e.getLiveFirebase(e):e.api,this.listen()}function f(e){return new h(e)}function d(e){return e.getLiveFirebase||e.api?new l(e):y.call(this,e)}var b=t.isObject,v=t.isFunction,g=t.isArray,F=t.isString,p=t.noop,y=t.live,m=t.rest;return h.prototype={getFirebase:function(e,t){return this.database.getFirebase?this.database.getFirebase(e,this.database,t):this.database.api},getQueryFirebase:function(e,t,i){return this.database.getQueryFirebase?this.database.getQueryFirebase(e,t):F(e)?this.getFirebase().root.child(e):this.getFirebase()},canCall:function(e,i,a,n){return t.forceOffline?(a(n,0),!1):this.database.getFirebase||this.database.api?!0:(e.apply(this.original,i),!1)},all:function(e,t,i){this.canCall(this.original.all,arguments,i,[])&&this.getFirebase(null,e).once("value").then(o(t))["catch"](c(i))},get:function(e,t,i,a){function n(e){var t=e.val();i(t)}this.canCall(this.original.get,arguments,a,{})&&this.getFirebase(e,t).child(e.$key()).once("value").then(n)["catch"](s(a))},create:function(e,t,i,a,n){this.canCall(this.original.create,arguments,n,{})&&(u(t),this.getFirebase(e,i).child(e.$key()).set(t).then(r(a))["catch"](s(n)))},update:function(e,t,i,a,n){this.canCall(this.original.update,arguments,n,{})&&(u(t),this.getFirebase(e,i).child(e.$key()).update(t).then(r(a))["catch"](s(n)))},remove:function(e,t,i,a){this.canCall(this.original.remove,arguments,a,{})&&this.getFirebase(e,t).child(e.$key()).remove().then(r(i))["catch"](s(a))},query:function(e,t,i,a,n){if(this.canCall(this.original.query,arguments,n,[])){var r=this.getQueryFirebase(e,t,i);if(b(t))for(var s in t){var u=t[s];if(g(u))for(var h=0;h<u.length;h++)r[s](u[h]);else r[s](u)}else v(t)&&t(r);r.once("value").then(o(a))["catch"](c(n))}}},l.prototype={listen:function(){var e=this.handleSave(),t=this.handleRemove();this.firebase.on("child_added",e),this.firebase.on("child_changed",e),this.firebase.on("child_removed",t)},handleSave:function(){var e=this.database;return function(t){var i=t.val(),a=n(t);e.liveSave(a,i)}},handleRemove:function(){var e=this.database;return function(t){var i=n(t);e.liveRemove(i)}},save:p,remove:p},t.setLive(d),t.setRest(f),t.Firebase={live:d,rest:f,RestClass:h,LiveClass:l},t});
//# sourceMappingURL=rekord-firebase.min.js.map
