{"version":3,"sources":["rekord-firebase.js"],"names":["Firebase","global","undefined","cache","Rekord_live","Rekord","live","Rekord_rest","rest","firebase","url","setLive","database","handleSave","snapshot","data","val","key","liveSave","handleRemove","liveRemove","api","call","this","fire","on","save","noop","remove","setRest","createCallback","success","failure","error","clearUndefined","obj","prop","all","onAll","models","model","isObject","push","onAllError","code","forceOffline","once","get","onGet","onGetError","file","child","$key","create","encoded","set","update","query"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,GAEA,GAAAC,MAEAC,EAAAC,OAAAC,KACAC,EAAAF,OAAAG,IAEAH,QAAAI,SAAA,SAAAC,GAEA,MAAAA,KAAAP,GAAAA,EAAAO,GAAAP,EAAAO,GAAA,GAAAV,GAAAU,IAGAL,OAAAM,QAAA,SAAAC,GASA,QAAAC,GAAAC,GAEA,GAAAC,GAAAD,EAAAE,MACAC,EAAAH,EAAAG,KAEAL,GAAAM,SAAAD,EAAAF,GAGA,QAAAI,GAAAL,GAEA,GACAG,IADAH,EAAAE,MACAF,EAAAG,MAEAL,GAAAQ,WAAAH,GApBA,IAAAL,EAAAS,IAEA,MAAAjB,GAAAkB,KAAAC,KAAAX,EAGA,IAAAY,GAAAZ,EAAAS,GAsBA,OAJAG,GAAAC,GAAA,cAAAZ,GACAW,EAAAC,GAAA,gBAAAZ,GACAW,EAAAC,GAAA,gBAAAN,IAGAV,SAAAe,EACAE,KAAArB,OAAAsB,KACAC,OAAAvB,OAAAsB,QAIAtB,OAAAwB,QAAA,SAAAjB,GASA,QAAAkB,GAAAC,EAAAC,GAEA,MAAA,UAAAC,GAEAA,EAEAD,KAAAC,GAIAF,OAKA,QAAAG,GAAAC,GAEA,IAAA,GAAAC,KAAAD,GAEAA,EAAAC,KAAAlC,SAEAiC,GAAAC,GA5BA,IAAAxB,EAAAS,IAEA,MAAAd,GAAAe,KAAAC,KAAAX,EAGA,IAAAY,GAAAZ,EAAAS,GA4BA,QAEAZ,SAAAe,EAEAa,IAAA,SAAAN,EAAAC,GAOA,QAAAM,GAAAxB,GAEA,GAAAC,GAAAD,EAAAE,MACAuB,IAEA,KAAA,GAAAtB,KAAAF,GACA,CACA,GAAAyB,GAAAzB,EAAAE,EAEAZ,QAAAoC,SAAAD,IAEAD,EAAAG,KAAAF,GAIAT,EAAAQ,GAGA,QAAAI,GAAAV,GAEAD,KAAAC,EAAAW,MAzBA,MAAAvC,QAAAwC,aAEAb,KAAA,OA0BAR,GAAAsB,KAAA,QAAAR,EAAAK,IAGAI,IAAA,SAAAP,EAAAT,EAAAC,GAOA,QAAAgB,GAAAlC,GAEA,GAAAC,GAAAD,EAAAE,KAEAe,GAAAhB,GAGA,QAAAkC,GAAAhB,GAEAD,KAAAC,EAAAW,MAdA,MAAAvC,QAAAwC,aAEAb,KAAA,OAeAkB,MAAAC,MAAAX,EAAAY,QAAAN,KAAA,QAAAE,EAAAC,IAGAI,OAAA,SAAAb,EAAAc,EAAAvB,EAAAC,GAEA,MAAA3B,QAAAwC,aAEAb,KAAA,IAGAE,EAAAoB,OAEA9B,GAAA2B,MAAAX,EAAAY,QAAAG,IAAAD,EAAAxB,EAAAC,EAAAC,MAGAwB,OAAA,SAAAhB,EAAAc,EAAAvB,EAAAC,GAEA,MAAA3B,QAAAwC,aAEAb,KAAA,IAGAE,EAAAoB,OAEA9B,GAAA2B,MAAAX,EAAAY,QAAAI,OAAAF,EAAAxB,EAAAC,EAAAC,MAGAJ,OAAA,SAAAY,EAAAT,EAAAC,GAEA,MAAA3B,QAAAwC,aAEAb,KAAA,OAGAR,GAAA2B,MAAAX,EAAAY,QAAAxB,OAAAE,EAAAC,EAAAC,KAGAyB,MAAA,SAAA/C,EAAA+C,EAAA1B,EAAAC,GAEAD,WAOA/B,SAAAuB","file":"rekord-firebase.min.js","sourcesContent":["(function(Firebase, global, undefined)\n{\n  var cache = {};\n\n  var Rekord_live = Rekord.live;\n  var Rekord_rest = Rekord.rest;\n\n  Rekord.firebase = function(url)\n  {\n    return url in cache ? cache[ url ] : cache[ url ] = new Firebase( url );\n  };\n\n  Rekord.setLive(function(database)\n  {\n    if ( !database.api )\n    {\n      return Rekord_live.call( this, database );\n    }\n\n    var fire = database.api;\n\n    function handleSave(snapshot)\n    {\n      var data = snapshot.val();\n      var key = snapshot.key();\n\n      database.liveSave( key, data );\n    }\n\n    function handleRemove(snapshot)\n    {\n      var data = snapshot.val();\n      var key = snapshot.key();\n\n      database.liveRemove( key );\n    }\n\n    fire.on( 'child_added', handleSave );\n    fire.on( 'child_changed', handleSave );\n    fire.on( 'child_removed', handleRemove );\n\n    return {\n      firebase: fire,\n      save: Rekord.noop,\n      remove: Rekord.noop\n    };\n  });\n\n  Rekord.setRest(function(database)\n  {\n    if ( !database.api )\n    {\n      return Rekord_rest.call( this, database );\n    }\n\n    var fire = database.api;\n\n    function createCallback(success, failure)\n    {\n      return function onOperation(error)\n      {\n        if ( error )\n        {\n          failure( {}, error );\n        }\n        else\n        {\n          success( {} );\n        }\n      };\n    }\n\n    function clearUndefined(obj)\n    {\n      for (var prop in obj)\n      {\n        if ( obj[ prop ] === undefined )\n        {\n          delete obj[ prop ];\n        }\n      }\n    }\n\n    return {\n\n      firebase: fire,\n\n      all: function( success, failure )\n      {\n        if ( Rekord.forceOffline )\n        {\n          return failure( [], 0 );\n        }\n\n        function onAll(snapshot)\n        {\n          var data = snapshot.val();\n          var models = [];\n\n          for (var key in data)\n          {\n            var model = data[ key ];\n\n            if ( Rekord.isObject( model ) )\n            {\n              models.push( model );\n            }\n          }\n\n          success( models );\n        }\n\n        function onAllError(error)\n        {\n          failure( [], error.code );\n        }\n\n        fire.once( 'value', onAll, onAllError );\n      },\n\n      get: function( model, success, failure )\n      {\n        if ( Rekord.forceOffline )\n        {\n          return failure( {}, 0 );\n        }\n\n        function onGet(snapshot)\n        {\n          var data = snapshot.val();\n\n          success( data );\n        }\n\n        function onGetError(error)\n        {\n          failure( {}, error.code );\n        }\n\n        file.child( model.$key() ).once( 'value', onGet, onGetError );\n      },\n\n      create: function( model, encoded, success, failure )\n      {\n        if ( Rekord.forceOffline )\n        {\n          return failure( {}, 0 );\n        }\n\n        clearUndefined( encoded );\n\n        fire.child( model.$key() ).set( encoded, createCallback( success, failure ) );\n      },\n\n      update: function( model, encoded, success, failure )\n      {\n        if ( Rekord.forceOffline )\n        {\n          return failure( {}, 0 );\n        }\n\n        clearUndefined( encoded );\n\n        fire.child( model.$key() ).update( encoded, createCallback( success, failure ) );\n      },\n\n      remove: function( model, success, failure )\n      {\n        if ( Rekord.forceOffline )\n        {\n          return failure( {}, 0 );\n        }\n\n        fire.child( model.$key() ).remove( createCallback( success, failure ) );\n      },\n\n      query: function( url, query, success, failure )\n      {\n        success( [] );\n      }\n\n    };\n\n  });\n\n})( Firebase, this );\n"],"sourceRoot":"/source/"}