{"version":3,"sources":["rekord-firebase.min.js"],"names":["root","factory","define","amd","Rekord","firebase","module","exports","global","require","Firebase","this","undefined","getKey","snapshot","isFunction","key","createOperationCallbackSuccess","success","createOperationCallbackFailure","failure","error","code","createQueryCallbackSuccess","data","val","models","model","isObject","push","createQueryCallbackFailure","clearUndefined","obj","prop","Rest","database","original","Rekord_rest","call","Live","getLiveFirebase","api","listen","RestFactory","LiveFactory","Rekord_live","isArray","isString","noop","live","rest","prototype","getFirebase","options","getQueryFirebase","url","child","canCall","func","args","offlineValue","forceOffline","apply","all","arguments","once","then","get","onGet","$key","create","encoded","set","update","remove","query","method","i","length","onSave","handleSave","onRemove","handleRemove","on","db","liveSave","liveRemove","save","setLive","setRest","RestClass","LiveClass"],"mappings":"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","file":"rekord-firebase.min.js","sourcesContent":["/* rekord-firebase 1.5.0 - A rekord binding to firebase - implementing Rekord.rest & Rekord.live by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define(['rekord', 'firebase'], function(Rekord, firebase) { // jshint ignore:line\n      return factory(root, Rekord, firebase);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(global, require('rekord'), require('firebase'));  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    root.Rekord = factory(root, root.Rekord, root.Firebase || root.firebase);\n  }\n}(this, function(global, Rekord, firebase, undefined)\n{\n\n  var isObject = Rekord.isObject;\n  var isFunction = Rekord.isFunction;\n  var isArray = Rekord.isArray;\n  var isString = Rekord.isString;\n  var noop = Rekord.noop;\n\n  var Rekord_live = Rekord.live;\n  var Rekord_rest = Rekord.rest;\n\n\nfunction getKey(snapshot)\n{\n  return isFunction( snapshot.key ) ? snapshot.key() : snapshot.key;\n}\n\nfunction createOperationCallbackSuccess(success)\n{\n  return function()\n  {\n    success( {} );\n  };\n}\n\nfunction createOperationCallbackFailure(failure)\n{\n  return function(error)\n  {\n    failure( {}, error.code );\n  };\n}\n\nfunction createQueryCallbackSuccess(success)\n{\n  return function(snapshot)\n  {\n    var data = snapshot.val();\n    var models = [];\n\n    for (var key in data)\n    {\n      var model = data[ key ];\n\n      if ( isObject( model ) )\n      {\n        models.push( model );\n      }\n    }\n\n    success( models );\n  };\n}\n\nfunction createQueryCallbackFailure(failure)\n{\n  return function(error)\n  {\n    failure( [], error.code );\n  };\n}\n\nfunction clearUndefined(obj)\n{\n  for (var prop in obj)\n  {\n    if ( obj[ prop ] === undefined )\n    {\n      delete obj[ prop ];\n    }\n  }\n}\n\n\nfunction Rest(database)\n{\n  this.database = database;\n  this.original = Rekord_rest.call( Rekord, database );\n}\n\nRest.prototype =\n{\n  getFirebase: function(model, options)\n  {\n    return this.database.getFirebase ? this.database.getFirebase( model, this.database, options ) : this.database.api;\n  },\n\n  getQueryFirebase: function(url, data, options)\n  {\n    return this.database.getQueryFirebase ? this.database.getQueryFirebase( url, data ) :\n      ( isString( url ) ? this.getFirebase().root.child( url ) : this.getFirebase() );\n  },\n\n  canCall: function(func, args, failure, offlineValue)\n  {\n    if ( Rekord.forceOffline )\n    {\n      failure( offlineValue, 0 );\n\n      return false;\n    }\n\n    if ( !this.database.getFirebase && !this.database.api )\n    {\n      func.apply( this.original, args );\n\n      return false;\n    }\n\n    return true;\n  },\n\n  all: function( options, success, failure )\n  {\n    if ( this.canCall( this.original.all, arguments, failure, [] ) )\n    {\n      this.getFirebase( null, options )\n        .once( 'value' )\n        .then( createQueryCallbackSuccess( success ) )\n        .catch( createQueryCallbackFailure( failure ) )\n      ;\n    }\n  },\n\n  get: function( model, options, success, failure )\n  {\n    function onGet(snapshot)\n    {\n      var data = snapshot.val();\n\n      success( data );\n    }\n\n    if ( this.canCall( this.original.get, arguments, failure, {} ) )\n    {\n      this.getFirebase( model, options )\n        .child( model.$key() )\n        .once( 'value' )\n        .then( onGet )\n        .catch( createOperationCallbackFailure( failure ) )\n      ;\n    }\n  },\n\n  create: function( model, encoded, options, success, failure )\n  {\n    if ( this.canCall( this.original.create, arguments, failure, {} ) )\n    {\n      clearUndefined( encoded );\n\n      this.getFirebase( model, options )\n        .child( model.$key() )\n        .set( encoded )\n        .then( createOperationCallbackSuccess( success ) )\n        .catch( createOperationCallbackFailure( failure ) )\n      ;\n    }\n  },\n\n  update: function( model, encoded, options, success, failure )\n  {\n    if ( this.canCall( this.original.update, arguments, failure, {} ) )\n    {\n      clearUndefined( encoded );\n\n      this.getFirebase( model, options )\n        .child( model.$key() )\n        .update( encoded )\n        .then( createOperationCallbackSuccess( success ) )\n        .catch( createOperationCallbackFailure( failure ) )\n      ;\n    }\n  },\n\n  remove: function( model, options, success, failure )\n  {\n    if ( this.canCall( this.original.remove, arguments, failure, {} ) )\n    {\n      this.getFirebase( model, options )\n        .child( model.$key() )\n        .remove()\n        .then( createOperationCallbackSuccess( success ) )\n        .catch( createOperationCallbackFailure( failure ) )\n      ;\n    }\n  },\n\n  query: function( url, data, options, success, failure )\n  {\n    if ( this.canCall( this.original.query, arguments, failure, [] ) )\n    {\n      var query = this.getQueryFirebase( url, data, options );\n\n      if ( isObject( data ) )\n      {\n        for (var method in data)\n        {\n          var args = data[ method ];\n\n          if ( isArray( args ) )\n          {\n            for (var i = 0; i < args.length; i++)\n            {\n              query[ method ]( args[ i ] );\n            }\n          }\n          else\n          {\n            query[ method ]( args );\n          }\n        }\n      }\n      else if ( isFunction( data ) )\n      {\n        data( query );\n      }\n\n      query\n        .once( 'value' )\n        .then( createQueryCallbackSuccess( success ) )\n        .catch( createQueryCallbackFailure( failure ) )\n      ;\n    }\n  }\n};\n\n\nfunction Live(database)\n{\n  this.database = database;\n  this.firebase = database.getLiveFirebase ? database.getLiveFirebase( database ) : database.api;\n  this.listen();\n}\n\nLive.prototype =\n{\n  listen: function()\n  {\n    var onSave = this.handleSave();\n    var onRemove = this.handleRemove();\n\n    this.firebase.on( 'child_added', onSave );\n    this.firebase.on( 'child_changed', onSave );\n    this.firebase.on( 'child_removed', onRemove );\n  },\n\n  handleSave: function()\n  {\n    var db = this.database;\n\n    return function onSave(snapshot)\n    {\n      var data = snapshot.val();\n      var key = getKey( snapshot );\n\n      db.liveSave( key, data );\n    };\n  },\n\n  handleRemove: function()\n  {\n    var db = this.database;\n\n    return function onRemove(snapshot)\n    {\n      var key = getKey( snapshot );\n\n      db.liveRemove( key );\n    };\n  },\n\n  save: noop,\n\n  remove: noop\n};\n\n\n  function RestFactory(database)\n  {\n    return new Rest( database );\n  }\n\n  function LiveFactory(database)\n  {\n    if ( !database.getLiveFirebase && !database.api )\n    {\n      return Rekord_live.call( this, database );\n    }\n\n    return new Live( database );\n  }\n\n  Rekord.setLive( LiveFactory );\n\n  Rekord.setRest( RestFactory );\n\n  Rekord.Firebase = {\n    live: LiveFactory,\n    rest: RestFactory,\n    RestClass: Rest,\n    LiveClass: Live\n  };\n\n  return Rekord;\n\n}));\n"],"sourceRoot":"/source/"}